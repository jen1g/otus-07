apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-config
  labels:
    app: {{ .Release.Name }}
data:
  application.yaml: |
    spring:
      cloud:
        gateway:
          routes:
            - id: auth-service-login
              uri: http://{{ .Values.gateway.serviceNameAuth }}.{{ .Release.Namespace }}.svc.cluster.local
              predicates:
                - Path=/login

            - id: auth-service-refresh
              uri: http://{{ .Values.gateway.serviceNameAuth }}.{{ .Release.Namespace }}.svc.cluster.local
              predicates:
                - Path=/refresh

            - id: user-service-open
              uri: http://{{ .Values.gateway.serviceNameUser }}.{{ .Release.Namespace }}.svc.cluster.local
              predicates:
                - Path=/user/register

            - id: user-service-secure
              uri: http://{{ .Values.gateway.serviceNameUser }}.{{ .Release.Namespace }}.svc.cluster.local
              predicates:
                - Path=/user/**
              filters:
                - CheckAuthToken

            - id: billing-service
              uri: http://{{ .Values.gateway.serviceNameBilling }}.{{ .Release.Namespace }}.svc.cluster.local
              predicates:
                - Path=/billing/**
              filters:
                - CheckAuthToken

            - id: order-service
              uri: http://{{ .Values.gateway.serviceNameOrder }}.{{ .Release.Namespace }}.svc.cluster.local
              predicates:
                - Path=/orders
              filters:
                - CheckAuthToken

            - id: notification-service
              uri: http://{{ .Values.gateway.serviceNameNotification }}.{{ .Release.Namespace }}.svc.cluster.local
              predicates:
                - Path=/notifications
              filters:
                - CheckAuthToken

    jwt:
      secret: ${JWT_SECRET}